<launch>
  
  
  <!-- The name of the parameter under which the URDF is loaded -->
  <arg name="limited" default="true"/>

    <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur5_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find planning_scene)/cfg/view_reachability_map2.rviz" required="true" />  -->

    <!-- Run Rviz and load the default config to see the state of the move_group node
  <include file="$(find ur5_moveit_config)/launch/moveit_rviz.launch">
    <arg name="config" value="false"/>
    <arg name="debug" value="$(arg debug)"/>
  </include> -->


  <!-- <node name="ur5_collision" pkg="planning_scene" type="ur5_collision" respawn="false" output="screen">
    <rosparam command="load" file="$(find ur5_moveit_config)/config/kinematics.yaml"/>
  </node> -->


    <!-- We do not have a robot connected, so publish fake joint states -->
<!--
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="true"/> 
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>
 --> 
  <!-- Given the published joint states, publish tf for the robot links -->
<!--
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />
-->

</launch>